name: üß™ Test

on:
  push:
    branches:
      - main
      - dev
      - release-*
    tags-ignore:
      - v*
    paths-ignore:
      - "docs/**"
      - "docs.root.tsx"
      - "components/**"
      - "**/README.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**/*.md"

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_ACCOUNT_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

jobs:
  integration:
    name: "üëÄ ${{ matrix.adapter }} (os: ${{ matrix.os }}, node: ${{ matrix.node-version }})"
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [16]
        adapter:
            - solid-start-node
            - solid-start-cloudflare-workers
            - solid-start-cloudflare-pages
            - solid-start-deno
        os:
            - ubuntu-latest
            # - macos-latest
            - windows-latest
        include:
          - os: ubuntu-latest
            playwright_binary_path: ~/.cache/ms-playwright
          # - os: macos-latest
          #   playwright_binary_path: ~/Library/Caches/ms-playwright
          - os: windows-latest
            playwright_binary_path: '~\\AppData\\Local\\ms-playwright'
            
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    
    - uses: pnpm/action-setup@v2.2.2
      with:
        version: 7
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Use Deno
      if: matrix.adapter == 'solid-start-deno'
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x

    - name: üïµÔ∏è‚Äç‚ôÇÔ∏è Get current Playwright version
      id: playwright-version
      shell: bash
      run: |
        playwright_version=1.23.4
        echo "::set-output name=version::${playwright_version}"

    - name: ü§ñ Cache Playwright binaries
      uses: actions/cache@v3
      id: playwright-cache
      with:
        path: ${{ matrix.playwright_binary_path }}
        key: ${{ runner.os }}-${{ runner.arch }}-cache-playwright-${{ steps.playwright-version.outputs.version }}

    - name: üñ®Ô∏è Playwright info
      shell: bash
      run: |
        echo "OS: ${{ matrix.os }}"
        echo "Playwright version: ${{ steps.playwright-version.outputs.version }}"
        echo "Playwright install dir: ${{ matrix.playwright_binary_path }}"
        echo "Cache key: ${{ runner.os }}-${{ runner.arch }}-cache-playwright-${{ steps.playwright-version.outputs.version }}"
        echo "Cache hit: ${{ steps.playwright-cache.outputs.cache-hit == 'true' }}"

    - name: üì• Install Playwright
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: pnpm --filter solid-start-tests install:playwright

    - name: üëÄ Run Integration Tests
      env: 
        START_ADAPTER: ${{ matrix.adapter }}
      run: npm run test
